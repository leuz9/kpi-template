rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function hasValidTimestamps() {
      let hasCreated = request.resource.data.createdAt is string;
      let hasUpdated = request.resource.data.updatedAt is string;
      return hasCreated && hasUpdated;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false;
    }

    // Team collection
    match /team/{memberId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Objectives collection
    match /objectives/{objectiveId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Key Results collection
    match /keyResults/{keyResultId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // KPIs collection
    match /kpis/{kpiId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}